Project nest_basic {
  database_type: 'MariaDB'
  Note: '''
    # Nest Basic Database
  '''
}

Table users {
  user_id int [pk, increment]
  email varchar(50) [unique, not null]
  hashed_password varchar [not null]
  salt varchar [not null]
  nickname varchar(50) [unique, not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

Table sessions {
  session_id char(36) [pk]
  user_id int [not null]
  refresh_token varchar [not null]
  user_agent varchar [not null]
  client_ip varchar [not null]
  is_blocked boolean [not null, default: `false`]
  created_at timestamp [not null, default: `now()`]
}

Ref {
  users.user_id < sessions.user_id [delete: cascade]
}

Table categories {
  category_id int [pk, increment]
  title varchar(50) [unique, not null]
  parent_category_id int [default: `null`]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

Table posts {
  post_id int [pk, increment]
  user_id int [not null]
  category_id int [not null]
  title varchar [not null]
  thumbnail_image_url varchar [not null]
  description text [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
  deleted_at timestamp [default: `null`]

  Indexes {
    title [name: "title"]
  }
}

Ref {
  users.user_id < posts.user_id [delete: cascade]
}

Ref {
  categories.category_id < posts.category_id [delete: restrict]
}

Table chat_rooms {
  chat_room_id int [pk, increment]
  title varchar(50) [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

Table chat_room_users {
  chat_room_id int [pk]
  user_id int [pk]
  created_at timestamp [not null, default: `now()`]
}

Ref {
  users.user_id < chat_room_users.user_id [delete: cascade]
}

Ref {
  chat_rooms.chat_room_id < chat_room_users.chat_room_id [delete: cascade]
}

Table chats {
  chat_id int [pk, increment]
  chat_room_id int [not null]
  user_id int
  content text [not null]
  created_at timestamp [not null, default: `now()`]
}

Ref {
  chat_rooms.chat_room_id < chats.chat_room_id [delete: cascade]
}

Ref {
  users.user_id < chats.user_id [delete: set null]
}